# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" "vfio_pci" "vfio" "vfio_iommu_type1" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [
        # enable IOMMU
        "intel_iommu=on"
      ]; 

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/f6b6be54-daad-4456-93ba-f0025dcf7f9b";
      fsType = "btrfs";
      options = [ "subvol=@" "compress-force=zstd" "discard=async" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C0F9-4D06";
      fsType = "vfat";
    };

  swapDevices = [ { 
    device = "/dev/disk/by-uuid/249b372f-87e9-4e5d-84be-296800ce2c0a";
  } ];

  boot.kernel.sysctl = { "vm.swappiness" = 30; };
  boot.extraModprobeConfig = ''
    options i915 enable_guc=3
  '';

  virtualisation.spiceUSBRedirection.enable = true;
  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
